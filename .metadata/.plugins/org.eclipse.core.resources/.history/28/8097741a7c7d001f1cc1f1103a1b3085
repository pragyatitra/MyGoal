package com.mygoal.tests;

import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.mygoal.baseclass.BaseClass;
import com.mygoal.pageobject.AnnouncementPage;
import com.mygoal.pageobject.DashboardPage;
import com.mygoal.pageobject.DepositPage;
import com.mygoal.pageobject.LoginPage;
import com.mygoal.pageobject.ManageAccountPage;
import com.mygoal.pageobject.NewAccountPage;
import com.mygoal.pageobject.SettingPage;
import com.mygoal.pageobject.TransactionPage;
import com.mygoal.pageobject.TransferPage;
import com.mygoal.pageobject.WebsitePage;
import com.mygoal.pageobject.WithdrowPage;
import com.mygoal.utility.Log;

public class DashboardPageTest extends BaseClass {
	private LoginPage loginPage;
	private DashboardPage dashboardPage;
	private NewAccountPage newAccountPage;
	private ManageAccountPage manageAccountPage;
	private TransactionPage transactionPage;
	private DepositPage depositPage;
	private WithdrowPage withdrowPage;
	private TransferPage transferPage;
	private AnnouncementPage announcementPage;
	private SettingPage settingPage;

	public DashboardPageTest() {
		super();
	}

	@BeforeMethod
	public void setup() {
		launchApp(prop.getProperty("browser"));
		loginPage = new LoginPage();
		dashboardPage = new DashboardPage();
		newAccountPage = new NewAccountPage();
		manageAccountPage = new ManageAccountPage();
		transactionPage = new TransactionPage();
		depositPage = new DepositPage();
		withdrowPage = new WithdrowPage();
		transferPage = new TransferPage();
		announcementPage = new AnnouncementPage();
		settingPage = new SettingPage();
	}

	@Test
	public void VerifyCurrURL() {
		Log.startTestCase("VerifyCurrURL");
		loginPage.verifyLoginWithValidUsernameAndValidPassword(prop.getProperty("username"),
				prop.getProperty("password"));
		String actualURL = dashboardPage.getCurrURL();
		String expectedURL = "http://localhost/banking/admin/";
		Log.info("Verifying url of dashboard page");
		Assert.assertEquals(actualURL, expectedURL);
		Log.info("Successfully verified dashboard URL");
		Log.endTestCase("VerifyCurrURL");

	}

	@Test
	public void VerifyTitleOfDashboard() {
		Log.startTestCase("VerifyTitleOfDashboard");
		loginPage.verifyLoginWithValidUsernameAndValidPassword(prop.getProperty("username"),
				prop.getProperty("password"));
		String actualTitle = dashboardPage.getCurrTitle();
		String expectedTitle = "State bank Of India";
		Log.info("Verifying title of dashboard page");
		Assert.assertEquals(actualTitle, expectedTitle);
		Log.info("Successfully verified dashboard title");
		Log.endTestCase("VerifyTitleOfDashboard");

	}

	@Test
	public void verifyAccountManagementClickFunctionalityTest() {
		Log.startTestCase("verifyAccountManagementClickFunctionalityTest");
		loginPage.verifyLoginWithValidUsernameAndValidPassword(prop.getProperty("username"),
				prop.getProperty("password"));
		String actualMessage = dashboardPage.verifyAccountManagementClickFunctionality();
		String expectedTitle = "New Account";
		Log.info("Verifying Account management button is working or not");
		Assert.assertEquals(actualMessage, expectedTitle);
		Log.info("Successfully verified Account management button");
		Log.endTestCase("verifyAccountManagementClickFunctionalityTest");

	}
}
